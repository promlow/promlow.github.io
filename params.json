{"name":"Functional Programming Miscellany","tagline":"","body":"# Functional Algorithms\r\n### Merge Sort\r\nMerge Sort is a good starting point with functional algorithms because the usual implementations are recursive, which are an import part of functional programming.\r\nHere is the pseudo-code definition of Merge Sort from [Wikipedia](http://en.wikipedia.org/wiki/Merge_sort) that uses lists.    \r\n    \r\n    function merge_sort(list m)\r\n        // Base case. A list of zero or one elements is sorted, by definition.\r\n        if length(m) <= 1\r\n            return m\r\n\r\n        // Recursive case. First, *divide* the list into equal-sized sublists.\r\n        var list left, right\r\n        var integer middle = length(m) / 2\r\n        for each x in m before middle\r\n             add x to left\r\n        for each x in m after or equal middle\r\n             add x to right\r\n\r\n        // Recursively sort both sublists.\r\n        left = merge_sort(left)\r\n        right = merge_sort(right)\r\n        // *Conquer*: merge the now-sorted sublists.\r\n        return merge(left, right)\r\n\r\n\r\n    function merge(left, right)\r\n        var list result\r\n        // assign the element of the sublists to 'result' variable until there is no element to merge. \r\n        while length(left) > 0 or length(right) > 0\r\n            if length(left) > 0 and length(right) > 0\r\n                // compare the first two element, which is the small one, of each two sublists.\r\n                if first(left) <= first(right)\r\n                    append first(left) to result\r\n                    left = rest(left)\r\n                else\r\n                    append first(right) to result\r\n                    right = rest(right)\r\n            else if length(left) > 0\r\n                append first(left) to result\r\n                left = rest(left)\r\n            else if length(right) > 0\r\n                append first(right) to result\r\n                right = rest(right)\r\n        end while\r\n    return result","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}